"""
Django settings for Educhum project.

Generated by 'django-admin startproject' using Django 2.2.12.

For more information on this file, see
https://docs.djangoproject.com/en/2.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.2/ref/settings/
"""
import sys
import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(__file__))


PROJECT_DIR = os.path.join(BASE_DIR, os.pardir)

TENANT_APPS_DIR = os.path.join(PROJECT_DIR, os.pardir)
sys.path.insert(0, TENANT_APPS_DIR)


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'gejmi1wn4x9x0@temu-)!bu+wc$r-i8$9q!-25$=t(xg+#2sj+'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']


# Application definition

SHARED_APPS = (
    'django_tenants',  # mandatory
    'teacher.apps.TeacherConfig', # you must list the app where your client model resides in
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    #'django.contrib.gis',
    )
TENANT_APPS = (
    # your tenant-specific apps
    'student.apps.StudentConfig',
    'crispy_forms',
    'django.contrib.admin',
    'django.contrib.auth',
    'colorfield',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django_filters',
    'bootstrapform',
    'crispy_forms',
    'registration',
    
    )
CRISPY_TEMPLATE_PACK = 'bootstrap4'
INSTALLED_APPS = list(set(SHARED_APPS + TENANT_APPS))
# Tenant specific application definition: end

MIDDLEWARE = [
# Tenant specific middleware: start
    'django_tenants.middleware.TenantMiddleware',
# Tenant specific middleware: end
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    #'django.contrib.auth.middleware.SessionAuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    #'django.contrib.sessions.middleware.SessionMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware'
]

ROOT_URLCONF = 'Educhum.urls_student'
PUBLIC_SCHEMA_URLCONF = 'Educhum.urls_teacher'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'Educhum.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.2/ref/settings/#databases

DATABASES = {
    'default': {
# Tenant specific database engine: start
        'ENGINE': 'django_tenants.postgresql_backend',
# Tenant specific database engine: end
        'NAME': 'Educhum1',
        'USER': 'postgres',
        'PASSWORD': '0111',
        'HOST': 'localhost',
        'PORT': '5432',
    }
}


# Tenant specific database router: start
DATABASE_ROUTERS = (
    'django_tenants.routers.TenantSyncRouter',
)
# Tenant specific database router: end

# Models containing clients details and domain: start
# Must be in public_app
TENANT_MODEL = "teacher.Client" # app.Model
TENANT_DOMAIN_MODEL = "teacher.Domain"  # app.Model
# Models containing clients details and domain: end

AUTO_DROP_SCHEMA =  True
# Password validation
# https://docs.djangoproject.com/en/1.9/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/1.9/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

DATE_INPUT_FORMATS = ('%d/%m/%Y')

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.9/howto/static-files/

STATIC_URL = '/static/'
PROJECT_ROOT = os.path.realpath(os.path.dirname(__file__))
MEDIA_ROOT = PROJECT_ROOT + '/static/'
MEDIA_URL = '/media/'


SESSION_COOKIE_DOMAIN = ".mainsite.com"
# Additional locations of static files

ACCOUNT_ACTIVATION_DAYS = 3
EMAIL_HOST = "smtp.gmail.com"
EMAIL_HOST_USER = 'nabeelahmddd@gmail.com'
EMAIL_HOST_PASSWORD = 'lucky0111'
EMAIL_PORT = 587
EMAIL_USE_TLS = True
LOGIN_REDIRECT_URL = "/"



TEMPLATE_DIRS = (os.path.join(BASE_DIR, 'teacher','templates'),
                 os.path.join(BASE_DIR, 'student','templates'),)

STATICFILES_DIRS = (
    os.path.join(BASE_DIR,'tenant_app','static'),
    os.path.join(BASE_DIR,'public_app','static'),
)